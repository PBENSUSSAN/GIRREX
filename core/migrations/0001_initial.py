# Generated by Django 5.2.4 on 2025-08-10 19:12

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Action",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero_action", models.CharField(blank=True, max_length=50)),
                (
                    "type_action",
                    models.CharField(
                        blank=True,
                        help_text="Ex: Documentaire, Formation, Technique",
                        max_length=100,
                    ),
                ),
                ("description", models.TextField()),
                ("date_prevue", models.DateField()),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("a_faire", "À faire"),
                            ("en_cours", "En cours"),
                            ("fait", "Fait"),
                            ("annule", "Annulé"),
                        ],
                        default="a_faire",
                        max_length=50,
                    ),
                ),
                ("archive", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Action de Changement",
                "verbose_name_plural": "Actions de Changement",
            },
        ),
        migrations.CreateModel(
            name="ActionQS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField()),
                ("date_prevue", models.DateField()),
                ("date_realisation", models.DateField(blank=True, null=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("a_faire", "À faire"),
                            ("en_cours", "En cours"),
                            ("fait", "Fait"),
                            ("annule", "Annulé"),
                        ],
                        default="a_faire",
                        max_length=50,
                    ),
                ),
                ("archive", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Action QS",
                "verbose_name_plural": "Actions QS",
            },
        ),
        migrations.CreateModel(
            name="ActiviteZone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_action",
                    models.CharField(
                        choices=[
                            ("ACTIVATION", "Activation"),
                            ("DESACTIVATION", "Désactivation"),
                        ],
                        max_length=20,
                        verbose_name="Type d'action",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Horodatage de l'action",
                    ),
                ),
            ],
            options={
                "verbose_name": "Activité de Zone",
                "verbose_name_plural": "Activités des Zones",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Affectation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fonction", models.CharField(max_length=255)),
                ("date_debut", models.DateField()),
                (
                    "date_fin",
                    models.DateField(
                        blank=True,
                        help_text="Laisser vide si l'affectation est en cours",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Affectation",
                "verbose_name_plural": "Affectations",
            },
        ),
        migrations.CreateModel(
            name="Agent",
            fields=[
                (
                    "id_agent",
                    models.IntegerField(
                        help_text="ID legacy unique provenant des fichiers CSV",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True,
                        help_text="Référence de l'agent (colonne 'Nom' dans agents.csv, ex: 'BO3')",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "trigram",
                    models.CharField(
                        blank=True,
                        help_text="Trigramme unique de l'agent",
                        max_length=10,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nom de famille"
                    ),
                ),
                (
                    "prenom",
                    models.CharField(blank=True, max_length=100, verbose_name="Prénom"),
                ),
                ("date_naissance", models.DateField(blank=True, null=True)),
                ("nationalite", models.CharField(blank=True, max_length=100)),
                (
                    "actif",
                    models.BooleanField(
                        default=True,
                        help_text="Indique si l'agent est actuellement en service actif",
                    ),
                ),
                (
                    "type_agent",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("controleur", "Contrôleur"),
                            ("administratif", "Administratif"),
                            ("technique", "Technique"),
                            ("autre", "Autre"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Agent",
                "verbose_name_plural": "Agents",
                "ordering": ["trigram", "reference"],
            },
        ),
        migrations.CreateModel(
            name="AgentRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_debut",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Date de début"
                    ),
                ),
                (
                    "date_fin",
                    models.DateField(
                        blank=True,
                        help_text="Laisser vide si l'attribution est à durée indéterminée.",
                        null=True,
                        verbose_name="Date de fin",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attribution de Rôle",
                "verbose_name_plural": "Attributions de Rôles",
            },
        ),
        migrations.CreateModel(
            name="AuditHeuresControle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "periode",
                    models.CharField(
                        help_text="Format libre, ex: '2024-Q1', '2024-03'",
                        max_length=50,
                    ),
                ),
                ("heures_CAG", models.FloatField(default=0.0)),
                ("heures_CAM", models.FloatField(default=0.0)),
                ("date_audit", models.DateField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Audit d'heures de contrôle",
                "verbose_name_plural": "Audits d'heures de contrôle",
            },
        ),
        migrations.CreateModel(
            name="AuditQS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_audit", models.DateField()),
                ("type_audit", models.CharField(max_length=100)),
                (
                    "rapport",
                    models.TextField(blank=True, help_text="Résumé du rapport d'audit"),
                ),
            ],
            options={
                "verbose_name": "Audit QS",
                "verbose_name_plural": "Audits QS",
            },
        ),
        migrations.CreateModel(
            name="CategorieEvenement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        help_text="Nom de la catégorie (ex: Météo, Visite, Consigne importante)",
                        max_length=100,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Description courte de ce que couvre cette catégorie.",
                        max_length=255,
                    ),
                ),
                (
                    "couleur",
                    models.CharField(
                        default="#343a40",
                        help_text="Code couleur hexadécimal pour l'affichage.",
                        max_length=7,
                    ),
                ),
            ],
            options={
                "verbose_name": "Catégorie d'Événement",
                "verbose_name_plural": "Catégories d'Événements",
                "ordering": ["centre", "nom"],
            },
        ),
        migrations.CreateModel(
            name="Centre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom_centre",
                    models.CharField(
                        help_text="Nom complet du centre (ex: DGA Essais en vol Istres)",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "code_centre",
                    models.CharField(
                        help_text="Code mnémonique du centre (ex: IS, CA, TO)",
                        max_length=10,
                        unique=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Centre",
                "verbose_name_plural": "Centres",
                "ordering": ["code_centre"],
            },
        ),
        migrations.CreateModel(
            name="CentreRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(max_length=100)),
                ("date_debut", models.DateField()),
                ("date_fin", models.DateField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Rôle au sein du Centre",
                "verbose_name_plural": "Rôles au sein des Centres",
            },
        ),
        migrations.CreateModel(
            name="CertificatMed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_visite", models.DateField()),
                (
                    "validite",
                    models.DateField(help_text="Date de fin de validité du certificat"),
                ),
                (
                    "classe",
                    models.CharField(help_text="Ex: Classe 1, Classe 2", max_length=50),
                ),
                ("restriction", models.TextField(blank=True)),
                (
                    "suspension",
                    models.DateField(
                        blank=True,
                        help_text="Date de début de la suspension de l'aptitude",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Certificat Médical",
                "verbose_name_plural": "Certificats Médicaux",
                "ordering": ["-validite"],
            },
        ),
        migrations.CreateModel(
            name="Changement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "origine",
                    models.TextField(
                        help_text="Qui ou quoi est à l'origine du changement"
                    ),
                ),
                ("description", models.TextField()),
                ("date_creation", models.DateField(auto_now_add=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("identifie", "Identifié"),
                            ("analyse", "En analyse"),
                            ("approuve", "Approuvé"),
                            ("implemente", "Implémenté"),
                        ],
                        default="identifie",
                        max_length=50,
                    ),
                ),
                (
                    "impact",
                    models.TextField(help_text="Analyse d'impact du changement"),
                ),
                ("archive", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Demande de Changement",
                "verbose_name_plural": "Demandes de Changement",
            },
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=255, unique=True)),
                ("contact", models.CharField(blank=True, max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254)),
            ],
            options={
                "verbose_name": "Client",
                "verbose_name_plural": "Clients",
                "ordering": ["nom"],
            },
        ),
        migrations.CreateModel(
            name="ControleVol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("heure_prise_en_charge", models.DateTimeField()),
                ("heure_fin_prise_en_charge", models.DateTimeField()),
                (
                    "type_vol",
                    models.CharField(
                        choices=[("CAG", "CAG"), ("CAM", "CAM")],
                        help_text="Type de contrôle réellement effectué",
                        max_length=10,
                    ),
                ),
            ],
            options={
                "verbose_name": "Prise en charge de vol",
                "verbose_name_plural": "Prises en charge de vols",
                "ordering": ["heure_prise_en_charge"],
            },
        ),
        migrations.CreateModel(
            name="Delegation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_debut",
                    models.DateField(help_text="Début de la période de délégation."),
                ),
                (
                    "date_fin",
                    models.DateField(help_text="Fin de la période de délégation."),
                ),
                (
                    "motivee_par",
                    models.CharField(
                        blank=True,
                        help_text="Raison de la délégation (ex: Congés, Déplacement).",
                        max_length=255,
                    ),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Délégation de Rôle",
                "verbose_name_plural": "Délégations de Rôles",
                "ordering": ["-date_debut"],
            },
        ),
        migrations.CreateModel(
            name="Evaluation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_eval",
                    models.CharField(max_length=100, verbose_name="Type d'évaluation"),
                ),
                ("annee", models.IntegerField()),
                ("date", models.DateField()),
                (
                    "resultat",
                    models.CharField(
                        choices=[
                            ("satisfaisant", "Satisfaisant"),
                            ("non_satisfaisant", "Non Satisfaisant"),
                            ("en_cours", "En cours"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Évaluation",
                "verbose_name_plural": "Évaluations",
            },
        ),
        migrations.CreateModel(
            name="EvaluationRisqueQS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_evaluation", models.DateField()),
                ("description", models.TextField()),
                (
                    "niveau_risque",
                    models.CharField(
                        help_text="Ex: Acceptable, Tolérable, Inacceptable",
                        max_length=50,
                    ),
                ),
                ("recommandations", models.TextField(blank=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("identifie", "Identifié"),
                            ("evalue", "Évalué"),
                            ("maitrise", "Maîtrisé"),
                            ("clos", "Clos"),
                        ],
                        default="identifie",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Évaluation de Risque QS",
                "verbose_name_plural": "Évaluations de Risques QS",
            },
        ),
        migrations.CreateModel(
            name="EvenementCentre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_heure_evenement",
                    models.DateTimeField(
                        db_index=True, help_text="Date et heure de l'événement."
                    ),
                ),
                (
                    "titre",
                    models.CharField(
                        help_text="Titre court et descriptif de l'événement.",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description détaillée de l'événement ou de la consigne."
                    ),
                ),
                (
                    "notification_generale",
                    models.BooleanField(
                        default=False,
                        help_text="Cochez cette case si cet événement doit faire l'objet d'une notification.",
                        verbose_name="Signaler pour notification générale",
                    ),
                ),
                ("cree_le", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Événement Centre",
                "verbose_name_plural": "Événements Centre",
                "ordering": ["-date_heure_evenement"],
            },
        ),
        migrations.CreateModel(
            name="EvenementQS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_evenement", models.DateField()),
                ("type_evenement", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "niveau_gravite",
                    models.CharField(
                        help_text="Ex: Mineur, Significatif, Majeur", max_length=50
                    ),
                ),
                (
                    "analyse",
                    models.TextField(
                        blank=True, help_text="Analyse à froid de l'événement"
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("ouvert", "Ouvert"),
                            ("analyse", "En analyse"),
                            ("clos", "Clos"),
                        ],
                        default="ouvert",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Événement QS",
                "verbose_name_plural": "Événements QS",
            },
        ),
        migrations.CreateModel(
            name="FeuilleTempsEntree",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_jour", models.DateField(db_index=True)),
                ("heure_arrivee", models.TimeField(blank=True, null=True)),
                ("heure_depart", models.TimeField(blank=True, null=True)),
                ("modifie_le", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Entrée de Feuille de Temps",
                "verbose_name_plural": "Entrées de Feuille de Temps",
                "ordering": ["-date_jour", "agent"],
                "permissions": [
                    ("view_feuilletemps", "Peut voir la feuille de temps journalière"),
                    (
                        "change_feuilletemps",
                        "Peut modifier la feuille de temps journalière",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Formation",
            fields=[
                (
                    "id_formation",
                    models.IntegerField(
                        help_text="ID legacy de la formation suivie provenant du CSV",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True, help_text="Date précise de la formation", null=True
                    ),
                ),
                (
                    "annee",
                    models.IntegerField(
                        blank=True,
                        help_text="Année de la formation, si la date n'est pas connue",
                        null=True,
                    ),
                ),
                (
                    "duree",
                    models.CharField(
                        blank=True,
                        help_text="Durée en jours, ou texte (ex: 'EPNER')",
                        max_length=20,
                    ),
                ),
                (
                    "resultat",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("reussi", "Réussi"),
                            ("echoue", "Échoué"),
                            ("en_cours", "En cours"),
                            ("planifie", "Planifié"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Formation Suivie",
                "verbose_name_plural": "Formations Suivies",
                "ordering": ["-annee", "-date"],
            },
        ),
        migrations.CreateModel(
            name="Habilitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_hab",
                    models.CharField(
                        max_length=100, verbose_name="Type d'habilitation"
                    ),
                ),
                ("date_obtention", models.DateField()),
                ("date_expiration", models.DateField(blank=True, null=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("valide", "Valide"),
                            ("expiree", "Expirée"),
                            ("revoquee", "Révoquée"),
                        ],
                        default="valide",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Habilitation",
                "verbose_name_plural": "Habilitations",
            },
        ),
        migrations.CreateModel(
            name="Licence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "id_licence",
                    models.IntegerField(
                        help_text="ID legacy de la licence provenant du CSV",
                        unique=True,
                    ),
                ),
                ("num_licence", models.CharField(blank=True, max_length=50)),
                ("type_licence", models.CharField(blank=True, max_length=100)),
                ("date_delivrance", models.DateField(blank=True, null=True)),
                (
                    "date_validite",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de fin de validité"
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("valide", "Valide"),
                            ("suspendue", "Suspendue"),
                            ("retiree", "Retirée"),
                            ("expiree", "Expirée"),
                        ],
                        default="valide",
                        max_length=50,
                    ),
                ),
                (
                    "renouvellement",
                    models.DateField(
                        blank=True,
                        help_text="Date du dernier renouvellement",
                        null=True,
                    ),
                ),
                (
                    "suspension",
                    models.DateField(
                        blank=True,
                        help_text="Date de début de la suspension",
                        null=True,
                    ),
                ),
                (
                    "retrait",
                    models.DateField(
                        blank=True, help_text="Date du retrait définitif", null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Licence",
                "verbose_name_plural": "Licences",
            },
        ),
        migrations.CreateModel(
            name="Mention",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_mention",
                    models.CharField(max_length=100, verbose_name="Type de mention"),
                ),
                ("date_obtention", models.DateField()),
                ("date_validite", models.DateField(blank=True, null=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("valide", "Valide"),
                            ("en_cours", "En cours"),
                            ("expiree", "Expirée"),
                        ],
                        default="valide",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Mention",
                "verbose_name_plural": "Mentions",
            },
        ),
        migrations.CreateModel(
            name="Module",
            fields=[
                (
                    "id_module",
                    models.IntegerField(
                        help_text="ID legacy du module provenant du CSV",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("module_type", models.CharField(blank=True, max_length=100)),
                ("module", models.CharField(blank=True, max_length=255)),
                ("item", models.CharField(blank=True, max_length=255)),
                (
                    "numero",
                    models.CharField(
                        blank=True,
                        db_column="numero",
                        max_length=50,
                        verbose_name="Numéro",
                    ),
                ),
                ("sujet", models.TextField(blank=True)),
                (
                    "date",
                    models.DateField(
                        blank=True,
                        help_text="Date de la dernière mise à jour du contenu du module",
                        null=True,
                    ),
                ),
                ("validite", models.DateField(blank=True, null=True)),
                ("support", models.CharField(blank=True, max_length=50)),
                (
                    "precisions",
                    models.TextField(blank=True, verbose_name="Sujet / Précisions"),
                ),
            ],
            options={
                "verbose_name": "Module de Formation (Catalogue)",
                "verbose_name_plural": "Modules de Formation (Catalogue)",
            },
        ),
        migrations.CreateModel(
            name="MRR",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("intitule", models.CharField(max_length=255)),
                ("date_ouverture", models.DateField(auto_now_add=True)),
                ("date_cloture", models.DateField(blank=True, null=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("ouvert", "Ouvert"),
                            ("en_cours", "En cours"),
                            ("clos", "Clos"),
                            ("annule", "Annulé"),
                        ],
                        default="ouvert",
                        max_length=50,
                    ),
                ),
                ("commentaires", models.TextField(blank=True)),
                ("archive", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Fiche MRR",
                "verbose_name_plural": "Fiches MRR",
            },
        ),
        migrations.CreateModel(
            name="MRRProgression",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("statut", models.CharField(max_length=100)),
                ("commentaire", models.TextField()),
            ],
            options={
                "verbose_name": "Progression MRR",
                "verbose_name_plural": "Progressions MRR",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="MRRSignataire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_signature", models.DateField(blank=True, null=True)),
                ("commentaire", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Signataire MRR",
                "verbose_name_plural": "Signataires MRR",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "destinataire",
                    models.CharField(
                        help_text="Email ou nom de l'agent/groupe", max_length=255
                    ),
                ),
                ("date_envoi", models.DateTimeField(blank=True, null=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("a_envoyer", "À envoyer"),
                            ("envoye", "Envoyé"),
                            ("erreur", "Erreur"),
                        ],
                        default="a_envoyer",
                        max_length=50,
                    ),
                ),
                ("message", models.TextField()),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
            },
        ),
        migrations.CreateModel(
            name="NotificationQS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("destinataire", models.CharField(max_length=255)),
                ("date_envoi", models.DateTimeField(blank=True, null=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("a_envoyer", "À envoyer"),
                            ("envoye", "Envoyé"),
                            ("erreur", "Erreur"),
                        ],
                        default="a_envoyer",
                        max_length=50,
                    ),
                ),
                ("message", models.TextField()),
            ],
            options={
                "verbose_name": "Notification QS",
                "verbose_name_plural": "Notifications QS",
            },
        ),
        migrations.CreateModel(
            name="Organisme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom_organisme", models.CharField(max_length=255, unique=True)),
                (
                    "type_organisme",
                    models.CharField(
                        blank=True,
                        help_text="Ex: Interne, ENAC, Partenaire industriel",
                        max_length=100,
                    ),
                ),
                ("agrement", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "verbose_name": "Organisme de Formation",
                "verbose_name_plural": "Organismes de Formation",
            },
        ),
        migrations.CreateModel(
            name="Parametre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        help_text="Nom technique du paramètre",
                        max_length=100,
                        unique=True,
                    ),
                ),
                ("description", models.TextField()),
                ("valeur_defaut", models.CharField(max_length=255)),
                (
                    "type_valeur",
                    models.CharField(
                        choices=[
                            ("string", "Texte"),
                            ("integer", "Entier"),
                            ("boolean", "Booléen"),
                            ("date", "Date"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Paramètre",
                "verbose_name_plural": "Paramètres",
            },
        ),
        migrations.CreateModel(
            name="PositionJour",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        help_text="Nom court et unique de la position (ex: 'J1', 'Q2', 'RTT', 'MIS')",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Description complète (ex: 'Journée normale', 'Mission extérieure')",
                        max_length=255,
                    ),
                ),
                (
                    "categorie",
                    models.CharField(
                        choices=[
                            ("SITE", "Travail sur site"),
                            ("HORS_SITE", "Travail hors site"),
                            ("NON_TRAVAIL", "Non travail"),
                        ],
                        help_text="Classification de la position pour les statistiques et règles.",
                        max_length=20,
                        verbose_name="Catégorie",
                    ),
                ),
                (
                    "couleur",
                    models.CharField(
                        default="#FFFFFF",
                        help_text="Code couleur hexadécimal (ex: #4169E1). Le blanc est la couleur par défaut.",
                        max_length=7,
                    ),
                ),
            ],
            options={
                "verbose_name": "Position Jour (Planning)",
                "verbose_name_plural": "Positions Jour (Planning)",
                "ordering": ["centre", "nom"],
            },
        ),
        migrations.CreateModel(
            name="Qualification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_qualif",
                    models.CharField(
                        max_length=100, verbose_name="Type de qualification"
                    ),
                ),
                ("date_obtention", models.DateField()),
                ("date_validite", models.DateField()),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("valide", "Valide"),
                            ("en_cours", "En cours de validation"),
                            ("expiree", "Expirée"),
                        ],
                        default="valide",
                        max_length=50,
                    ),
                ),
            ],
            options={
                "verbose_name": "Qualification",
                "verbose_name_plural": "Qualifications",
            },
        ),
        migrations.CreateModel(
            name="RecommendationQS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField()),
                (
                    "priorite",
                    models.CharField(
                        help_text="Ex: Haute, Moyenne, Basse", max_length=50
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("proposee", "Proposée"),
                            ("acceptee", "Acceptée"),
                            ("refusee", "Refusée"),
                            ("implementee", "Implémentée"),
                        ],
                        default="proposee",
                        max_length=50,
                    ),
                ),
                ("date_emission", models.DateField(auto_now_add=True)),
                ("date_echeance", models.DateField()),
                ("diffusion_nationale", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Recommandation QS",
                "verbose_name_plural": "Recommandations QS",
            },
        ),
        migrations.CreateModel(
            name="ResponsableQSCentral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_debut", models.DateField()),
                ("date_fin", models.DateField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Responsable QS Central",
                "verbose_name_plural": "Responsables QS Central",
            },
        ),
        migrations.CreateModel(
            name="ResponsableSMS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_debut", models.DateField()),
                ("date_fin", models.DateField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Responsable SMS",
                "verbose_name_plural": "Responsables SMS",
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        choices=[
                            ("ADJOINT_CHEF_DE_CENTRE", "Adjoint Chef de Centre"),
                            ("ADJOINT_CHEF_DE_DIVISION", "Adjoint Chef de Division"),
                            ("ADJOINT_ES", "Adjoint ES"),
                            ("ADJOINT_FORM", "Adjoint Form"),
                            ("ADJOINT_QS", "Adjoint QS"),
                            ("CHEF_DE_CENTRE", "Chef de Centre"),
                            ("CHEF_DE_DIVISION", "Chef de Division"),
                            ("CHEF_DE_QUART", "Chef de Quart"),
                            ("CONTROLEUR", "Contrôleur"),
                            ("FORM_LOCAL", "Formateur Local"),
                            ("QS_LOCAL", "QS Local"),
                            ("RESPONSABLE_SMS", "Responsable SMS"),
                            ("SMS_LOCAL", "SMS Local"),
                            ("ES_LOCAL", "ES Local"),
                            ("ADJOINT_CONFORMITE", "Adjoint Conformité"),
                            ("COORDONATEUR", "Coordonnateur"),
                        ],
                        max_length=50,
                        unique=True,
                        verbose_name="Nom du Rôle",
                    ),
                ),
                (
                    "scope",
                    models.CharField(
                        choices=[
                            ("CENTRAL", "Central"),
                            ("LOCAL", "Local"),
                            ("OPERATIONNEL", "Opérationnel"),
                        ],
                        max_length=20,
                        verbose_name="Portée du rôle",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("ENCADREMENT", "Encadrement"),
                            ("MANAGEMENT", "Management"),
                            ("EXECUTION", "Exécution"),
                        ],
                        max_length=20,
                        verbose_name="Niveau hiérarchique",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rôle / Fonction Métier",
                "verbose_name_plural": "Rôles / Fonctions Métier",
                "ordering": ["scope", "level", "nom"],
            },
        ),
        migrations.CreateModel(
            name="ServiceJournalier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_jour", models.DateField(db_index=True)),
                ("heure_ouverture", models.TimeField(verbose_name="Heure d'ouverture")),
                (
                    "heure_cloture",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Heure de clôture"
                    ),
                ),
                (
                    "date_visa",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date du visa"
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("OUVERTE", "Ouverte"),
                            ("CLOTUREE", "Clôturée"),
                            ("VISEE", "Visée"),
                        ],
                        default="OUVERTE",
                        max_length=10,
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Journalier",
                "verbose_name_plural": "Services Journaliers",
                "ordering": ["-date_jour", "centre"],
                "permissions": [
                    (
                        "open_close_service",
                        "Peut ouvrir et clôturer le service journalier",
                    ),
                    ("visa_service", "Peut viser un service journalier clôturé"),
                    ("reopen_service", "Peut rouvrir un service journalier clôturé"),
                ],
            },
        ),
        migrations.CreateModel(
            name="ServiceJournalierHistorique",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_action",
                    models.CharField(
                        choices=[
                            ("OUVERTURE", "Ouverture"),
                            ("CLOTURE", "Clôture"),
                            ("REOUVERTURE", "Réouverture"),
                        ],
                        default="OUVERTURE",
                        max_length=20,
                        verbose_name="Type d'action",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Horodatage"),
                ),
            ],
            options={
                "verbose_name": "Historique du Service Journalier",
                "verbose_name_plural": "Historiques des Services Journaliers",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="TourDeService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(db_index=True)),
                ("commentaire", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Tour de Service",
                "verbose_name_plural": "Tours de Service",
                "ordering": ["-date", "agent"],
            },
        ),
        migrations.CreateModel(
            name="TourDeServiceHistorique",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("commentaire", models.TextField(blank=True, null=True)),
                ("modifie_le", models.DateTimeField()),
                (
                    "type_modification",
                    models.CharField(
                        choices=[
                            ("CREATION", "Création"),
                            ("MODIFICATION", "Modification"),
                        ],
                        max_length=20,
                    ),
                ),
            ],
            options={
                "verbose_name": "Historique de Tour de Service",
                "verbose_name_plural": "Historiques des Tours de Service",
                "ordering": ["-modifie_le"],
            },
        ),
        migrations.CreateModel(
            name="ValeurParametre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("valeur", models.CharField(max_length=255)),
                (
                    "est_global",
                    models.BooleanField(
                        default=False,
                        help_text="Cochez si la valeur s'applique à tous les centres",
                    ),
                ),
            ],
            options={
                "verbose_name": "Valeur de Paramètre",
                "verbose_name_plural": "Valeurs de Paramètres",
            },
        ),
        migrations.CreateModel(
            name="VersionTourDeService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "annee",
                    models.IntegerField(help_text="L'année du planning (ex: 2025)"),
                ),
                (
                    "mois",
                    models.IntegerField(
                        help_text="Le mois du planning (ex: 7 pour Juillet)"
                    ),
                ),
                (
                    "numero_version",
                    models.CharField(
                        editable=False,
                        help_text="Identifiant unique de la version (ex: 072025-1)",
                        max_length=20,
                    ),
                ),
                (
                    "date_validation",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="La date et l'heure exactes de la validation.",
                    ),
                ),
                (
                    "donnees_planning",
                    models.JSONField(
                        help_text="Snapshot complet du planning au moment de la validation."
                    ),
                ),
            ],
            options={
                "verbose_name": "Version Validée de Tour de Service",
                "verbose_name_plural": "Versions Validées de Tour de Service",
                "ordering": ["-annee", "-mois", "-date_validation"],
            },
        ),
        migrations.CreateModel(
            name="Vol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_demande", models.DateField(auto_now_add=True)),
                ("date_vol", models.DateField()),
                ("heure_debut", models.TimeField()),
                ("heure_fin", models.TimeField()),
                (
                    "etat",
                    models.CharField(
                        choices=[
                            ("en_attente", "En attente"),
                            ("planifie", "Planifié"),
                            ("en_cours", "En cours"),
                            ("realise", "Réalisé"),
                            ("annule", "Annulé"),
                        ],
                        default="en_attente",
                        max_length=50,
                    ),
                ),
                (
                    "type_vol",
                    models.CharField(
                        choices=[("CAG", "CAG"), ("CAM", "CAM")], max_length=10
                    ),
                ),
                ("commentaire", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "Vol",
                "verbose_name_plural": "Vols",
                "ordering": ["-date_vol", "heure_debut"],
            },
        ),
        migrations.CreateModel(
            name="Zone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        help_text="Nom court et clair de la zone.", max_length=100
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description plus détaillée de la zone et de ses limites ou fonctions.",
                    ),
                ),
                (
                    "est_active",
                    models.BooleanField(
                        default=False, verbose_name="Actuellement active"
                    ),
                ),
                (
                    "derniere_activite",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Dernière activité"
                    ),
                ),
            ],
            options={
                "verbose_name": "Zone",
                "verbose_name_plural": "Zones",
                "ordering": ["centre", "nom"],
            },
        ),
    ]
